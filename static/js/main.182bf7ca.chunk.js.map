{"version":3,"sources":["components/TodoListItem/TodoListItem.jsx","components/TodoList/index.js","components/TodoList/TodoList.jsx","components/AppHeader/index.js","components/AppHeader/AppHeader.jsx","components/SearchPanel/SearchPanel.jsx","components/ItemStatusFilter/ItemStatusFilter.jsx","components/ItemAddForm/ItemAddForm.jsx","components/ItemAddForm/index.js","components/App/App.jsx","index.js"],"names":["TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","classNames","done","important","className","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","AppHeader","toDo","SearchPanel","state","term","onSearchChange","e","target","value","setState","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","toUpperCase","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","searchItem","text","toLowerCase","includes","toggleProperty","deleteItem","idx","findIndex","el","slice","addItem","newItem","arr","propName","oldItem","items","length","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.182bf7ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './TodoListItem.css'\nexport default class TodoListItem extends Component {\n\n  render() {\n    const { label, onDeleted,\n      onToggleImportant,\n      onToggleDone,\n      done, important } = this.props;\n\n    let classNames = 'todo-list-item';\n\n    if (done) {\n      classNames += ' done';\n    }\n\n    if (important) {\n      classNames += ' important';\n    }\n\n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={onToggleDone}>\n          {label}\n        </span>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={onToggleImportant}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\">\n          <i className=\"fa fa-trash-o\"\n            onClick={onDeleted}\n          />\n        </button>\n      </span>\n    );\n  }\n}\n","import TodoList from './TodoList';\n\nexport default TodoList;","import React from 'react';\nimport TodoListItem from \"../TodoListItem/TodoListItem\";\nimport './TodoList.css'\n\nconst TodoList = ({ todos, onDeleted,\n  onToggleImportant,\n  onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={item.id} className=\"list-group-item\">\n        <TodoListItem {...itemProps}\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    )\n  })\n\n  return (\n    <ul className=\"list-group todo-list\">\n      {elements}\n    </ul>\n  )\n}\n\nexport default TodoList;","import AppHeader from './AppHeader'\n\nexport default AppHeader;","import React from 'react';\nimport './AppHEader.css'\n\nconst AppHeader = ({ toDo, done }) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  )\n}\n\nexport default AppHeader;","import React, { Component } from \"react\";\nimport './SearchPanel.css';\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  };\n\n  onSearchChange = (e) => {\n    const term = e.target.value;\n    this.setState({ term });\n    this.props.onSearchChange(term)\n  };\n\n  render() {\n    return (\n      <input type=\"text\"\n        className=\"form-control search-input\"\n        placeholder=\"type to search\"\n        value={this.state.term}\n        onChange={this.onSearchChange}\n      />\n    );\n  }\n};\n","import React, { Component } from \"react\";\n\nimport './ItemStatusFilter.css'\n\nexport default class ItemStatusFilter extends Component {\n  buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' }\n  ];\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\n      return (\n        <button type=\"button\"\n          className={`btn ${clazz}`}\n          key={name}\n          onClick={() => onFilterChange(name)}>\n          {label}\n        </button>\n      )\n    })\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n};\n\n","import React, { Component } from \"react\";\n\nimport './ItemAddForm.css';\n\nexport default class ItemAddForm extends Component {\n\n  state = {\n    label: ''\n  }\n\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value.toUpperCase()\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    this.props.onItemAdded(this.state.label)\n    this.setState({\n      label: ''\n    })\n  }\n\n  render() {\n    return (\n      <form className=\"d-flex item-add-form\"\n        onSubmit={this.onSubmit}>\n        <input type=\"text\"\n          className=\"form-control\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onLabelChange}\n          value={this.state.label}\n        />\n        <button\n          className=\"btn btn-outline-secondary\">\n          Add item\n        </button>\n      </form>\n    );\n  }\n};\n\n","import ItemAddForm from './ItemAddForm';\n\nexport default ItemAddForm;\n\n","import React, { Component } from 'react';\n\nimport TodoList from \"../TodoList\";\nimport AppHeader from \"../AppHeader\"\nimport SearchPanel from '../SearchPanel/SearchPanel';\nimport ItemStatusFilter from '../ItemStatusFilter/ItemStatusFilter';\nimport ItemAddForm from '../ItemAddForm'\n\nimport './App.css'\n\nexport default class App extends Component {\n\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Learn React'),\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Awesome App'),\n      this.createTodoItem('Change JOB'),\n    ],\n    term: '',\n    filter: 'all'//active, all, done\n  }\n\n  //Function for create todoData in state\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    }\n  }\n\n  //Function for AppHeader\n\n  //1. Function for SearchPanel\n\n  searchItem = (text) => {\n    this.setState(({ todoData }) => {\n\n      const newArray = [\n        todoData.filter((item) => item.label.toLowerCase.includes(text))\n      ];\n\n      return {\n        todoData: newArray\n      }\n    })\n  };\n\n  onSearchChange = (term) => {\n    this.setState({ term })\n  };\n\n  //2. Function for ItemStatusFilter\n  onFilterChange = (filter) => {\n    this.setState({ filter })\n  }\n\n  //Function for TodoList--> TodoListItem\n\n  //Фун-ия для переключения состояния important или done\n  //что бедет передано в propName\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    //1.update object\n    const oldItem = arr[idx];\n    const newItem = {\n      ...oldItem,\n      [propName]: !oldItem[propName]\n    }\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ];\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important')\n      }\n    })\n  }\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done')\n      }\n    })\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArray = [\n        ...todoData.slice(0, idx),\n        ...todoData.slice(idx + 1)\n      ];\n\n      return {\n        todoData: newArray\n      }\n    })\n  }\n\n  addItem = (text) => {\n    //generate id?\n    const newItem = this.createTodoItem(text)\n    //add element in Arr\n    this.setState(({ todoData }) => {\n      const newArray = [\n        ...todoData,\n        newItem\n      ];\n\n      return {\n        todoData: newArray\n      }\n    })\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter((item) => {\n      return item.label\n        .toLowerCase()\n        .indexOf(term.toLowerCase()) > -1\n    })\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const { todoData, term, filter } = this.state;\n    const visibleItems = this.filter(\n      this.search(todoData, term), filter);\n\n    const doneCount = todoData.filter((el) => el.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\" >\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel\n            onSearchChange={this.onSearchChange}\n          />\n          <ItemStatusFilter\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n          />\n        </div>\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n        <ItemAddForm onItemAdded={this.addItem} />\n      </div>\n    );\n  }\n};\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App.jsx';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}